{"version":3,"sources":["logic/slide.js","logic/addRandom.js","Board.js","logic/rotateBoard.js","logic/setStart.js","logic/combine.js","logic/checkIfMoved.js","logic/getScore.js","logic/checkSwipe.js","App.js","index.js"],"names":["slide","newBoard","copyBoard","Object","toConsumableArray","i","valueBoard","j","push","missing","length","zerosArray","Array","fill","concat","addRandom","x","y","options","randomCell","Math","floor","random","positionRightSwipe","positionLeftSwipe","positionDownSwipe","positionUpSwipe","Board","state","score","board","restartGame","_this","setState","checkKey","e","repeat","keyCode","swipe","btn","oldBoard","map","arr","slice","console","table","butt","cb","w","h","t","log","reverse","rotateBoard","setStart","combine","ifMoved","oldCopyBoard","moved","checkIfMoved","newScore","getScore","onSwipeEnd","event","right","left","down","swipeDirection","up","direction","checkSwipe","window","addEventListener","this","startBoard","position","renderBoard","row","cell","react_default","a","createElement","className","Fragment","lib_default","onSwipeStart","onSwipeMove","onClick","Component","App","src_Board","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.30d99a6b.chunk.js","sourcesContent":["export default function slide(newBoard) {\r\n  let copyBoard = [...newBoard];\r\n  for (let i = 0; i < 4; i++) {\r\n    let valueBoard = [];\r\n    for (let j = 0; j < 4; j++) {\r\n      if (copyBoard[i][j] > 0) {\r\n        valueBoard.push(copyBoard[i][j]);\r\n      }\r\n    }\r\n    let missing = 4 - valueBoard.length;\r\n    let zerosArray = Array(missing).fill(0);\r\n    copyBoard[i] = zerosArray.concat(valueBoard);\r\n  }\r\n\r\n  return copyBoard;\r\n}\r\n","export default function addRandom(newBoard) {\r\n  let copyBoard = newBoard;\r\n  let zerosArray = [];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (copyBoard[i][j] === 0) {\r\n        zerosArray.push({\r\n          x: i,\r\n          y: j\r\n        });\r\n      }\r\n    }\r\n  }\r\n  let options = zerosArray.length;\r\n  let randomNum = Math.floor(Math.random() * options);\r\n  let randomCell = zerosArray[randomNum];\r\n\r\n  copyBoard[randomCell.x][randomCell.y] = Math.random() * 1 > 0.8 ? 4 : 2;\r\n\r\n  return copyBoard;\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport React, { Component } from \"react\";\r\nimport slide from \"./logic/slide\";\r\nimport combine from \"./logic/combine\";\r\nimport checkIfMoved from \"./logic/checkIfMoved\";\r\nimport addRandom from \"./logic/addRandom\";\r\nimport getScore from \"./logic/getScore\";\r\nimport rotateBoard from \"./logic/rotateBoard\";\r\nimport setStart from \"./logic/setStart\";\r\nimport Swipe from \"react-easy-swipe\";\r\nimport checkSwipe from \"./logic/checkSwipe\";\r\n\r\nlet positionRightSwipe = [];\r\nlet positionLeftSwipe = [];\r\nlet positionDownSwipe = [];\r\nlet positionUpSwipe = [];\r\nclass Board extends Component {\r\n  state = {\r\n    score: 0,\r\n    board: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.checkKey, false);\r\n    let startBoard = [...this.state.board];\r\n\r\n    startBoard = addRandom(startBoard);\r\n    this.setState({\r\n      board: startBoard\r\n    });\r\n  }\r\n  restartGame = () => {\r\n    let newBoard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\r\n    newBoard = addRandom(newBoard);\r\n    this.setState({\r\n      board: newBoard,\r\n      score: 0\r\n    });\r\n  };\r\n  checkKey = e => {\r\n    if (e.repeat) {\r\n      return;\r\n    }\r\n    if (e.keyCode === 37) {\r\n      this.swipe(\"left\");\r\n    } else if (e.keyCode === 38) {\r\n      this.swipe(\"up\");\r\n    } else if (e.keyCode === 39) {\r\n      this.swipe(\"right\");\r\n    } else if (e.keyCode === 40) {\r\n      this.swipe(\"down\");\r\n    }\r\n  };\r\n  swipe = btn => {\r\n    // -----------------------------------------------------------\r\n    let newBoard = [...this.state.board];\r\n    const oldBoard = newBoard.map(arr => {\r\n      return arr.slice();\r\n    });\r\n    console.table(oldBoard);\r\n    // console.table(oldBoard);\r\n    // console.table(newBoard);\r\n    newBoard = rotateBoard(newBoard, btn);\r\n    // console.table(oldBoard);\r\n    // console.table(newBoard);\r\n    newBoard = slide(newBoard);\r\n    // console.table(oldBoard);\r\n    // console.table(newBoard);\r\n    newBoard = combine(newBoard);\r\n    // console.table(oldBoard);\r\n    // console.table(newBoard);\r\n    newBoard = slide(newBoard);\r\n    // console.table(oldBoard);\r\n    // console.table(newBoard);\r\n\r\n    newBoard = setStart(newBoard, btn);\r\n\r\n    console.table(newBoard);\r\n\r\n    const ifMoved = checkIfMoved(newBoard, oldBoard);\r\n    if (ifMoved) {\r\n      // console.table(oldBoard);\r\n      // console.table(newBoard);\r\n      console.log(\"MOVED TRUE\");\r\n      let newScore = this.state.score;\r\n      newBoard = addRandom(newBoard);\r\n      newScore = getScore(newScore, newBoard);\r\n      // console.table(newBoard);\r\n      this.setState({\r\n        score: newScore,\r\n        board: newBoard\r\n      });\r\n    } else if (!ifMoved) {\r\n      console.log(\"MOVED FALSE\");\r\n      return;\r\n    }\r\n  };\r\n  onSwipeStart(event) {\r\n    console.log(\"Start swiping...\", event);\r\n  }\r\n\r\n  onSwipeMove(position, event) {\r\n    //moveRight:\r\n    if (position.x >= 10 && position.x > position.y) {\r\n      positionRightSwipe.push({ right: position.x });\r\n    } else if (position.x <= -10) {\r\n      positionLeftSwipe.push({ left: position.x });\r\n    } else if (position.y >= 10) {\r\n      positionDownSwipe.push({ down: position.y });\r\n    } else if (position.y <= -10) {\r\n      positionUpSwipe.push({ up: position.y });\r\n    }\r\n    return;\r\n  }\r\n\r\n  onSwipeEnd = event => {\r\n    let right = positionRightSwipe.length;\r\n    let left = positionLeftSwipe.length;\r\n    let down = positionDownSwipe.length;\r\n    let up = positionUpSwipe.length;\r\n    const swipeDirection = checkSwipe(up, right, down, left);\r\n    positionRightSwipe.length = 0;\r\n    positionLeftSwipe.length = 0;\r\n    positionDownSwipe.length = 0;\r\n    positionUpSwipe.length = 0;\r\n    this.swipe(swipeDirection);\r\n  };\r\n  render() {\r\n    const renderBoard = this.state.board.map(row => {\r\n      return (row = row.map(cell => {\r\n        if (cell === 0) {\r\n          return <div className=\"cell cell-0\" />;\r\n        } else if (cell === 2) {\r\n          return <div className=\"cell cell-2\">{cell}</div>;\r\n        } else if (cell === 4) {\r\n          return <div className=\"cell cell-4\">{cell}</div>;\r\n        } else if (cell === 8) {\r\n          return <div className=\"cell cell-8\">{cell}</div>;\r\n        } else if (cell === 16) {\r\n          return <div className=\"cell cell-16\">{cell}</div>;\r\n        } else if (cell === 32) {\r\n          return <div className=\"cell cell-32\">{cell}</div>;\r\n        } else if (cell === 64) {\r\n          return <div className=\"cell cell-64\">{cell}</div>;\r\n        } else if (cell === 128) {\r\n          return <div className=\"cell cell-128\">{cell}</div>;\r\n        } else if (cell === 256) {\r\n          return <div className=\"cell cell-256\">{cell}</div>;\r\n        } else if (cell === 512) {\r\n          return <div className=\"cell cell-512\">{cell}</div>;\r\n        } else if (cell === 1024) {\r\n          return <div className=\"cell cell-1024\">{cell}</div>;\r\n        } else if (cell === 2048) {\r\n          return <div className=\"cell cell-2048\">{cell}</div>;\r\n        } else if (cell === 4096) {\r\n          return (\r\n            <>\r\n              <div className=\"cell cell-4096\">{cell}</div>\r\n              <div className=\"cell-winner\" />\r\n            </>\r\n          );\r\n        }\r\n      }));\r\n    });\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Swipe\r\n          onSwipeStart={this.onSwipeStart}\r\n          onSwipeMove={this.onSwipeMove}\r\n          onSwipeEnd={this.onSwipeEnd}\r\n        >\r\n          <div className=\"top\">\r\n            <span>{this.state.score}</span>{\" \"}\r\n            <span onClick={this.restartGame} className=\"restart\">\r\n              Restart\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"board\"> {renderBoard}</div>\r\n        </Swipe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","export default function rotateBoard(newBoard, btn) {\r\n  const butt = btn;\r\n  // let cb = [...newBoard];\r\n  let cb = newBoard.map(arr => {\r\n    return arr.slice();\r\n  });\r\n  var w = cb.length;\r\n  var h = cb.length;\r\n\r\n  var i,\r\n    j,\r\n    t = [];\r\n  if (butt === \"right\") {\r\n    console.log(\"YOU PRESSED RIGHT!\");\r\n    return cb;\r\n  } else if (butt === \"left\") {\r\n    console.log(\"YOU PRESSED LEFT\");\r\n    for (let i = 0; i < 4; i++) {\r\n      cb[i] = cb[i].reverse();\r\n    }\r\n    // console.table(cb);\r\n    return cb;\r\n  } else if (butt === \"up\") {\r\n    console.log(\"YOU PRESSED UP!\");\r\n    cb = cb.reverse();\r\n    for (i = 0; i < h; i++) {\r\n      t[i] = [];\r\n      for (j = 0; j < w; j++) {\r\n        t[i][j] = cb[j][i];\r\n      }\r\n    }\r\n    // console.table(t);\r\n    return t;\r\n  } else if (butt === \"down\") {\r\n    console.log(\"YOU PRESSED DOWN!\");\r\n    for (i = 0; i < h; i++) {\r\n      t[i] = [];\r\n      for (j = 0; j < w; j++) {\r\n        t[i][j] = cb[j][i];\r\n      }\r\n    }\r\n    t = t.reverse();\r\n    // console.table(t);\r\n    return t;\r\n  }\r\n  return cb;\r\n}\r\n","export default function rotateBoard(newBoard, btn) {\r\n  let cb = [...newBoard];\r\n  var w = cb.length;\r\n  var h = cb.length;\r\n\r\n  var i,\r\n    j,\r\n    t = [];\r\n  if (btn === \"right\") {\r\n    return cb;\r\n  } else if (btn === \"left\") {\r\n    console.log(\"YOU PRESSED LEFT BEFORE\");\r\n    for (let i = 0; i < 4; i++) {\r\n      cb[i] = cb[i].reverse();\r\n    }\r\n    return cb;\r\n  } else if (btn === \"up\") {\r\n    console.log(\"YOU PRESSED UP BEFORE\");\r\n    for (i = 0; i < h; i++) {\r\n      t[i] = [];\r\n      for (j = 0; j < w; j++) {\r\n        t[i][j] = cb[j][i];\r\n      }\r\n    }\r\n    t = t.reverse();\r\n    console.table(t);\r\n    return t;\r\n  } else if (btn === \"down\") {\r\n    console.log(\"YOU PRESSED DOWN BEFORE\");\r\n    cb = cb.reverse();\r\n    for (i = 0; i < h; i++) {\r\n      t[i] = [];\r\n      for (j = 0; j < w; j++) {\r\n        t[i][j] = cb[j][i];\r\n      }\r\n    }\r\n    console.table(t);\r\n    return t;\r\n  }\r\n  return cb;\r\n}\r\n","export default function combine(newBoard) {\r\n  let copyBoard = [...newBoard];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 3; j > 0; j--) {\r\n      if (copyBoard[i][j] === copyBoard[i][j - 1] && copyBoard[i][j] !== 0) {\r\n        copyBoard[i][j] = copyBoard[i][j] + copyBoard[i][j - 1];\r\n        copyBoard[i][j - 1] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  return copyBoard;\r\n}\r\n","export default function checkIfMoved(newBoard, oldBoard) {\r\n  const copyBoard = [...newBoard];\r\n  const oldCopyBoard = [...oldBoard];\r\n  let moved = false;\r\n  // console.table(copyBoard);\r\n  // console.table(oldCopyBoard);\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (copyBoard[i][j] !== oldCopyBoard[i][j]) {\r\n        console.log(copyBoard[i][j]);\r\n        console.log(oldBoard[i][j]);\r\n\r\n        moved = true;\r\n        return moved;\r\n      }\r\n    }\r\n  }\r\n  // console.log(moved);\r\n  return moved;\r\n}\r\n","export default function getScore(newScore, newBoard) {\r\n  let score = 0;\r\n  const copyBoard = [...newBoard];\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      score = score + copyBoard[i][j];\r\n    }\r\n  }\r\n  console.log(score);\r\n  return score;\r\n}\r\n","export default function checkSwipe(up, right, down, left) {\r\n  let direction = \"\";\r\n  if (up > down) {\r\n    direction = \"up\";\r\n  } else if (down > up) {\r\n    direction = \"down\";\r\n  } else if (left > right) {\r\n    direction = \"left\";\r\n  } else if (right > left) {\r\n    direction = \"right\";\r\n  }\r\n\r\n  return direction;\r\n}\r\n","import React from \"react\";\nimport Board from \"./Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}